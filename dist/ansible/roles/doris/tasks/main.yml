---
    - name: Insert hostnames and ip in /etc/hosts file
      blockinfile:
        dest: /etc/hosts
        block: "{{ lookup('template', 'hosts.j2') }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR DORIS"

    - name: Insert hostnames and ip in /etc/hosts file
      blockinfile:
        dest: /etc/security/limits.conf
        block: "{{ lookup('template', 'limits.conf.j2') }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR DORIS"

    - name: Install jdk 17
      ansible.builtin.package:
        name:
        - java-17-openjdk-devel
        state: latest

      name: set swappines
    - sysctl:
        name: vm.swappiness
        value: '0'
        state: present

    - name: set vm.max_map_count to 2200000 in sysctl
      sysctl: name={{ item.key }} value={{ item.value }}
      with_items:
        -   { key: "vm.max_map_count", value: "2200000" }

    - name: Make sure ntp service unit is running
      ansible.builtin.systemd_service:
        enabled: true
        state: started
        name: chronyd

    - include_tasks: "{{ role_path }}/tasks/{{ os_version }}.yml"

    - name: Reboot the machine with all defaults options
      reboot:

    - name: Create Doris user
      user:
        name: "{{ doris_user }}"
        group: "{{ org_group }}"
        shell: /bin/bash
        create_home: yes
      register: doris_user_registered

    - name: ensure new doris directory exists
      file:
        path: "{{ doris_home }}NEWDORIS"
        state: directory
        owner: "{{ doris_user }}"
        group: "{{ org_group }}"
        mode: '770'

    - name: Extract Doris tarball
      unarchive:
        src: "{{ doris_airgap_archive }}"
        dest: "{{ doris_home }}NEWDORIS"
        remote_src: no
        owner: "{{ doris_user }}"
        group: "{{ org_group }}"
        creates: "{{ doris_home }}/be"

    - name:
      ansible.builtin.find:
        paths: "{{ doris_home }}NEWDORIS"
        file_type: directory
        recurse: no
      register: newdoris_dir_registered

    - name: move to correct path
      command: mv {{ item.path }} {{ doris_home }}
      args:
        creates: "{{ doris_home }}/be"
      with_items: "{{ newdoris_dir_registered.files }}"


    - name: Delete content & directory
      ansible.builtin.file:
        state: absent
        path: "{{ doris_home }}NEWDORIS"


    - name: ensure doris directories exists
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ doris_user }}"
        group: "{{ org_group }}"
        mode: '770'
      loop:
        - "{{ doris_log_dir }}"
        - "{{ doris_meta_created_dir }}"
        - "{{ doris_be_storage_root_path_dir }}"

    - name: Create fe config
      when: inventory_hostname in groups['doris_fe_master']
      template:
        src: "fe.conf.j2"
        dest: "{{ doris_home }}/fe/conf/fe.conf"

    - name: Create system systemd doris fe master service file
      when: inventory_hostname in groups['doris_fe_master']
      template:
        src: "doris-fe-master.service.j2"
        dest: /etc/systemd/system/doris-fe-master.service

    - name: Create fe follower config
      when: inventory_hostname in groups['doris_fe_followers']
      template:
        src: "fe.conf.j2"
        dest: "{{ doris_home }}/fe/conf/fe.conf"

    - name: Create system systemd doris fe follower service file
      when: inventory_hostname in groups['doris_fe_followers']
      template:
        src: "doris-fe-follower.service.j2"
        dest: /etc/systemd/system/doris-fe-follower.service

    - name: Create fe observer config
      when: inventory_hostname in groups['doris_fe_followers']
      template:
        src: "fe.conf.j2"
        dest: "{{ doris_home }}/fe/conf/fe.conf"

    - name: Create system systemd doris fe observer service file
      when: inventory_hostname in groups['doris_fe_observers']
      template:
        src: "doris-fe-observer.service.j2"
        dest: /etc/systemd/system/doris-fe-observer.service


    - name: Create be config
      when: inventory_hostname in groups['doris_be_nodes']
      template:
        src: "be.conf.j2"
        dest: "{{ doris_home }}/be/conf/be.conf"

    - name: Create system systemd doris be node service file
      when: inventory_hostname in groups['doris_be_nodes']
      template:
        src: "doris-be.service.j2"
        dest: /etc/systemd/system/doris-be.service

    - name: Start Doris FE master on master node
      when: inventory_hostname in groups['doris_fe_master']
      systemd:
        name: doris-fe-master
        state: started
        enabled: true

    - name: create sql to register all FE followers
      when: inventory_hostname in groups['doris_fe_master']
      blockinfile:
        dest: /tmp/fe_followers.msql
        block: "{{ lookup('template', 'fe_followers.sql.j2') }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR DORIS"
        create: true

    - name: register all FE followers
      when: inventory_hostname in groups['doris_fe_master']
      shell: mysql -h {{ doris_fe_master_host }}  -P 9030 -u root << /tmp/fe_followers.sql

    - name: create sql to register all FE observers
      when: inventory_hostname in groups['doris_fe_master']
      blockinfile:
        dest: /tmp/fe_observers.msql
        block: "{{ lookup('template', 'fe_observers.sql.j2') }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR DORIS"
        create: true

    - name: register all FE observers
      when: inventory_hostname in groups['doris_fe_master']
      shell: mysql -h {{ doris_fe_master_host }}  -P 9030 -u root << /tmp/fe_observers.sql


    - name: create sql to register all BE
      when: inventory_hostname in groups['doris_fe_master']
      blockinfile:
        dest: /tmp/be.msql
        block: "{{ lookup('template', 'be.sql.j2') }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR DORIS"
        create: true

    - name: register all BE
      when: inventory_hostname in groups['doris_fe_master']
      shell: mysql -h {{ doris_fe_master_host }}  -P 9030 -u root << /tmp/be.sql

    - name: Start doris FE followers
      when: inventory_hostname in groups['doris_fe_followers']
      systemd:
        name: doris-fe-follower
        state: started
        enabled: true

    - name: Start doris FE observer
      when: inventory_hostname in groups['doris_fe_observers']
      systemd:
        name: doris-fe-observer
        state: started
        enabled: true

    - name: Start doris BE worker on worker nodes
      when: inventory_hostname in groups['doris_be_nodes']
      systemd:
        name: doris-be
        state: started
        enabled: true

